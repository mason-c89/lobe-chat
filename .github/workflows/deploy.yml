name: Deploy to Server

on:
  push:
    branches:
      - main  # 你可以根据实际需求修改触发部署的分支

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH key
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t lobechat:${{ github.run_number }} .
          # 确保镜像构建成功
          if [ $? -ne 0 ]; then
            echo "Docker build failed!" && exit 1
          fi

      # Step 4: Log in to Aliyun Docker registry
      - name: Log in to Aliyun Docker registry
        run: |
          echo ${{ secrets.ALIYUN_DOCKER_PASSWORD }} | docker login --username=${{ secrets.ALIYUN_USERNAME }} --password-stdin registry.cn-hangzhou.aliyuncs.com
          # 检查登录是否成功
          if [ $? -ne 0 ]; then
            echo "Docker login failed!" && exit 1
          fi

      # Step 5: Tag the Docker image for Aliyun registry
      - name: Tag Docker image
        run: |
          IMAGE_TAG="lobechat-${{ github.run_number }}-${{ github.sha }}"
          docker tag lobechat:${{ github.run_number }} registry.cn-hangzhou.aliyuncs.com/jie-images/practice:$IMAGE_TAG
          echo "Tagged Docker image as: $IMAGE_TAG"

      # Step 6: Push Docker image to Aliyun registry
      - name: Push Docker image to Aliyun registry
        run: |
          IMAGE_TAG="lobechat-${{ github.run_number }}-${{ github.sha }}"
          docker push registry.cn-hangzhou.aliyuncs.com/jie-images/practice:$IMAGE_TAG
          # 确保推送成功
          if [ $? -ne 0 ]; then
            echo "Docker push failed!" && exit 1
          fi
          
      # Step 7: Deploy Docker container on server (示例，确保替换服务器信息)
      - name: Deploy Docker container on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_IP }} "
            docker pull registry.cn-hangzhou.aliyuncs.com/jie-images/practice:$IMAGE_TAG &&
            docker stop lobe-chat-database || true &&
            docker rm lobe-chat-database || true &&
            $ docker run -it -d --name lobe-chat-database -p 3210:3210
              -e DATABASE_URL=${{ secrets.DATABASE_URL }}
              -e KEY_VAULTS_SECRET=${{ secrets.KEY_VAULTS_SECRET }}
              -e NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
              -e CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
              -e CLERK_WEBHOOK_SECRET=${{ secrets.CLERK_WEBHOOK_SECRET }}
              -e S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
              -e S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
              -e S3_BUCKET=${{ secrets.S3_BUCKET }}
              -e S3_ENDPOINT=${{ secrets.S3_ENDPOINT }}
              -e S3_PUBLIC_DOMAIN=${{ secrets.S3_PUBLIC_DOMAIN }}
              registry.cn-hangzhou.aliyuncs.com/jie-images/practice:$IMAGE_TAG"
